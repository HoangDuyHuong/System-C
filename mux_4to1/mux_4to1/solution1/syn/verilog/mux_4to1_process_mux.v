// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mux_4to1_process_mux (
        in0,
        in1,
        in2,
        in3,
        sel,
        out_r,
        out_r_ap_vld
);

parameter    ap_true = 1'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;

input   in0;
input   in1;
input   in2;
input   in3;
input  [1:0] sel;
output   out_r;
output   out_r_ap_vld;

reg out_r;
reg out_r_ap_vld;
wire   [1:0] val_V_read_fu_66_p2;




always @ (in0 or in1 or in2 or in3 or val_V_read_fu_66_p2) begin
    if ((~(val_V_read_fu_66_p2 == ap_const_lv2_3) & ~(val_V_read_fu_66_p2 == ap_const_lv2_2) & ~(val_V_read_fu_66_p2 == ap_const_lv2_1) & ~(val_V_read_fu_66_p2 == ap_const_lv2_0))) begin
        out_r = ap_const_lv1_0;
    end else if ((val_V_read_fu_66_p2 == ap_const_lv2_0)) begin
        out_r = in0;
    end else if ((val_V_read_fu_66_p2 == ap_const_lv2_1)) begin
        out_r = in1;
    end else if ((val_V_read_fu_66_p2 == ap_const_lv2_2)) begin
        out_r = in2;
    end else if ((val_V_read_fu_66_p2 == ap_const_lv2_3)) begin
        out_r = in3;
    end else begin
        out_r = 'bx;
    end
end

always @ (val_V_read_fu_66_p2) begin
    if (((val_V_read_fu_66_p2 == ap_const_lv2_3) | (val_V_read_fu_66_p2 == ap_const_lv2_2) | (val_V_read_fu_66_p2 == ap_const_lv2_1) | (val_V_read_fu_66_p2 == ap_const_lv2_0) | (~(val_V_read_fu_66_p2 == ap_const_lv2_3) & ~(val_V_read_fu_66_p2 == ap_const_lv2_2) & ~(val_V_read_fu_66_p2 == ap_const_lv2_1) & ~(val_V_read_fu_66_p2 == ap_const_lv2_0)))) begin
        out_r_ap_vld = ap_const_logic_1;
    end else begin
        out_r_ap_vld = ap_const_logic_0;
    end
end

assign val_V_read_fu_66_p2 = sel;


endmodule //mux_4to1_process_mux

