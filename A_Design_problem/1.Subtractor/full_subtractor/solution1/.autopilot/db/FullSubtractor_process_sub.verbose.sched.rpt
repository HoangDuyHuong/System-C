

================================================================
== Vivado HLS Report for 'FullSubtractor_process_sub'
================================================================
* Date:           Wed May 14 21:16:48 2025

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        full_subtractor
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.48|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 1
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
* FSM state operations: 

 <State 1>: 5.48ns
ST_1: stg_2 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i1* %A), !map !37

ST_1: stg_3 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i1* %B), !map !41

ST_1: stg_4 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %Bin), !map !45

ST_1: stg_5 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i1* %D), !map !49

ST_1: stg_6 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %Bout), !map !53

ST_1: stg_7 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecPort([15 x i8]* @p_str2, i32 0, [7 x i8]* @p_str7, [2 x i8]* @p_str4, i32 0, i32 0, i1* %A) nounwind

ST_1: stg_8 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecPort([15 x i8]* @p_str2, i32 0, [7 x i8]* @p_str7, [2 x i8]* @p_str5, i32 0, i32 0, i1* %B) nounwind

ST_1: stg_9 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecPort([15 x i8]* @p_str2, i32 0, [7 x i8]* @p_str7, [4 x i8]* @p_str6, i32 0, i32 0, i1* %Bin) nounwind

ST_1: stg_10 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecPort([15 x i8]* @p_str2, i32 1, [7 x i8]* @p_str7, [2 x i8]* @p_str8, i32 0, i32 0, i1* %D) nounwind

ST_1: stg_11 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecPort([15 x i8]* @p_str2, i32 1, [7 x i8]* @p_str7, [5 x i8]* @p_str9, i32 0, i32 0, i1* %Bout) nounwind

ST_1: stg_12 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecProcessDef([15 x i8]* @p_str2, i32 0, [12 x i8]* @p_str3) nounwind

ST_1: tmp_1 [1/1] 0.00ns
:11  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str11)

ST_1: stg_14 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecProtocol(i32 1) nounwind

ST_1: tmp [1/1] 0.00ns
:13  %tmp = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %A)

ST_1: tmp_6 [1/1] 0.00ns
:14  %tmp_6 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %B)

ST_1: tmp_7 [1/1] 0.00ns
:15  %tmp_7 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %Bin)

ST_1: tmp1 [1/1] 1.37ns
:16  %tmp1 = xor i1 %tmp_6, %tmp_7

ST_1: v [1/1] 1.37ns
:17  %v = xor i1 %tmp1, %tmp

ST_1: stg_20 [1/1] 0.00ns
:18  call void @_ssdm_op_Write.ap_auto.volatile.i1P(i1* %D, i1 %v)

ST_1: tmp_2 [1/1] 1.37ns
:19  %tmp_2 = xor i1 %tmp, true

ST_1: tmp_3 [1/1] 1.37ns
:20  %tmp_3 = and i1 %tmp_6, %tmp_2

ST_1: tmp_4 [1/1] 1.37ns
:21  %tmp_4 = or i1 %tmp_6, %tmp_2

ST_1: tmp_5 [1/1] 1.37ns
:22  %tmp_5 = and i1 %tmp_7, %tmp_4

ST_1: v_1 [1/1] 1.37ns
:23  %v_1 = or i1 %tmp_3, %tmp_5

ST_1: stg_26 [1/1] 0.00ns
:24  call void @_ssdm_op_Write.ap_auto.volatile.i1P(i1* %Bout, i1 %v_1)

ST_1: empty [1/1] 0.00ns
:25  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str11, i32 %tmp_1)

ST_1: stg_28 [1/1] 0.00ns
:26  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
