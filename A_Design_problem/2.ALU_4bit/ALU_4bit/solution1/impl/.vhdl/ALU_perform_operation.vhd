-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ALU_perform_operation is
port (
    A : IN STD_LOGIC_VECTOR (3 downto 0);
    B : IN STD_LOGIC_VECTOR (3 downto 0);
    op_code : IN STD_LOGIC_VECTOR (2 downto 0);
    result : OUT STD_LOGIC_VECTOR (3 downto 0);
    result_ap_vld : OUT STD_LOGIC;
    carry_borrow : OUT STD_LOGIC;
    carry_borrow_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ALU_perform_operation is 
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal r_V_7_fu_177_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_V_phi_fu_119_p18 : STD_LOGIC_VECTOR (3 downto 0);
    signal val_V_read_fu_84_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal res_V_6_fu_184_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_6_fu_191_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_3_fu_198_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_2_fu_212_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_1_fu_226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_fu_240_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_phi_fu_144_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_2_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_fu_251_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs_V_fu_247_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_fu_255_p2 : STD_LOGIC_VECTOR (4 downto 0);


begin



    carry_1_fu_233_p2 <= "1" when (unsigned(A) < unsigned(B)) else "0";
    carry_2_fu_219_p2 <= "1" when (A = ap_const_lv4_F) else "0";
    carry_3_fu_205_p2 <= "1" when (A = ap_const_lv4_0) else "0";
    carry_borrow <= v_phi_fu_144_p18(0);
    carry_borrow_ap_vld <= ap_const_logic_1;
    grp_fu_170_p2 <= (B and A);
    lhs_V_fu_247_p1 <= std_logic_vector(resize(unsigned(A),5));
    r_V_6_fu_191_p2 <= (B or A);
    r_V_7_fu_177_p2 <= (B xor A);
    r_V_fu_255_p2 <= std_logic_vector(unsigned(rhs_V_fu_251_p1) + unsigned(lhs_V_fu_247_p1));
    res_V_1_fu_226_p2 <= std_logic_vector(unsigned(A) - unsigned(B));
    res_V_2_fu_212_p2 <= std_logic_vector(unsigned(A) + unsigned(ap_const_lv4_1));
    res_V_3_fu_198_p2 <= std_logic_vector(unsigned(A) + unsigned(ap_const_lv4_F));
    res_V_6_fu_184_p2 <= (grp_fu_170_p2 xor ap_const_lv4_F);
    res_V_fu_240_p2 <= std_logic_vector(unsigned(B) + unsigned(A));
    result <= v_V_phi_fu_119_p18;
    result_ap_vld <= ap_const_logic_1;
    rhs_V_fu_251_p1 <= std_logic_vector(resize(unsigned(B),5));

    -- v_V_phi_fu_119_p18 assign process. --
    v_V_phi_fu_119_p18_assign_proc : process(r_V_7_fu_177_p2, val_V_read_fu_84_p2, res_V_6_fu_184_p2, r_V_6_fu_191_p2, grp_fu_170_p2, res_V_3_fu_198_p2, res_V_2_fu_212_p2, res_V_1_fu_226_p2, res_V_fu_240_p2)
    begin
        if ((not((val_V_read_fu_84_p2 = ap_const_lv3_7)) and not((val_V_read_fu_84_p2 = ap_const_lv3_6)) and not((val_V_read_fu_84_p2 = ap_const_lv3_5)) and not((val_V_read_fu_84_p2 = ap_const_lv3_4)) and not((val_V_read_fu_84_p2 = ap_const_lv3_3)) and not((val_V_read_fu_84_p2 = ap_const_lv3_2)) and not((val_V_read_fu_84_p2 = ap_const_lv3_1)) and not((val_V_read_fu_84_p2 = ap_const_lv3_0)))) then 
            v_V_phi_fu_119_p18 <= ap_const_lv4_0;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_0)) then 
            v_V_phi_fu_119_p18 <= res_V_fu_240_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_1)) then 
            v_V_phi_fu_119_p18 <= res_V_1_fu_226_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_2)) then 
            v_V_phi_fu_119_p18 <= res_V_2_fu_212_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_3)) then 
            v_V_phi_fu_119_p18 <= res_V_3_fu_198_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_4)) then 
            v_V_phi_fu_119_p18 <= grp_fu_170_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_5)) then 
            v_V_phi_fu_119_p18 <= r_V_6_fu_191_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_6)) then 
            v_V_phi_fu_119_p18 <= res_V_6_fu_184_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_7)) then 
            v_V_phi_fu_119_p18 <= r_V_7_fu_177_p2;
        else 
            v_V_phi_fu_119_p18 <= "XXXX";
        end if; 
    end process;


    -- v_phi_fu_144_p18 assign process. --
    v_phi_fu_144_p18_assign_proc : process(val_V_read_fu_84_p2, carry_3_fu_205_p2, carry_2_fu_219_p2, carry_1_fu_233_p2, r_V_fu_255_p2)
    begin
        if ((val_V_read_fu_84_p2 = ap_const_lv3_0)) then 
            v_phi_fu_144_p18 <= r_V_fu_255_p2(4 downto 4);
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_1)) then 
            v_phi_fu_144_p18 <= carry_1_fu_233_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_2)) then 
            v_phi_fu_144_p18 <= carry_2_fu_219_p2;
        elsif ((val_V_read_fu_84_p2 = ap_const_lv3_3)) then 
            v_phi_fu_144_p18 <= carry_3_fu_205_p2;
        elsif (((val_V_read_fu_84_p2 = ap_const_lv3_7) or (val_V_read_fu_84_p2 = ap_const_lv3_6) or (val_V_read_fu_84_p2 = ap_const_lv3_5) or (val_V_read_fu_84_p2 = ap_const_lv3_4) or (not((val_V_read_fu_84_p2 = ap_const_lv3_7)) and not((val_V_read_fu_84_p2 = ap_const_lv3_6)) and not((val_V_read_fu_84_p2 = ap_const_lv3_5)) and not((val_V_read_fu_84_p2 = ap_const_lv3_4)) and not((val_V_read_fu_84_p2 = ap_const_lv3_3)) and not((val_V_read_fu_84_p2 = ap_const_lv3_2)) and not((val_V_read_fu_84_p2 = ap_const_lv3_1)) and not((val_V_read_fu_84_p2 = ap_const_lv3_0))))) then 
            v_phi_fu_144_p18 <= ap_const_lv1_0;
        else 
            v_phi_fu_144_p18 <= "X";
        end if; 
    end process;

    val_V_read_fu_84_p2 <= op_code;
end behav;
