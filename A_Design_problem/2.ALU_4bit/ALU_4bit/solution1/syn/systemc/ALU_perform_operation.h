// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _ALU_perform_operation_HH_
#define _ALU_perform_operation_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ALU_perform_operation : public sc_module {
    // Port declarations 7
    sc_in< sc_lv<4> > A;
    sc_in< sc_lv<4> > B;
    sc_in< sc_lv<3> > op_code;
    sc_out< sc_lv<4> > result;
    sc_out< sc_logic > result_ap_vld;
    sc_out< sc_logic > carry_borrow;
    sc_out< sc_logic > carry_borrow_ap_vld;


    // Module declarations
    ALU_perform_operation(sc_module_name name);
    SC_HAS_PROCESS(ALU_perform_operation);

    ~ALU_perform_operation();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > r_V_7_fu_177_p2;
    sc_signal< sc_lv<4> > v_V_phi_fu_119_p18;
    sc_signal< sc_lv<3> > val_V_read_fu_84_p2;
    sc_signal< sc_lv<4> > res_V_6_fu_184_p2;
    sc_signal< sc_lv<4> > r_V_6_fu_191_p2;
    sc_signal< sc_lv<4> > grp_fu_170_p2;
    sc_signal< sc_lv<4> > res_V_3_fu_198_p2;
    sc_signal< sc_lv<4> > res_V_2_fu_212_p2;
    sc_signal< sc_lv<4> > res_V_1_fu_226_p2;
    sc_signal< sc_lv<4> > res_V_fu_240_p2;
    sc_signal< sc_lv<1> > v_phi_fu_144_p18;
    sc_signal< sc_lv<1> > carry_3_fu_205_p2;
    sc_signal< sc_lv<1> > carry_2_fu_219_p2;
    sc_signal< sc_lv<1> > carry_1_fu_233_p2;
    sc_signal< sc_lv<5> > rhs_V_fu_251_p1;
    sc_signal< sc_lv<5> > lhs_V_fu_247_p1;
    sc_signal< sc_lv<5> > r_V_fu_255_p2;
    static const bool ap_true;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_carry_1_fu_233_p2();
    void thread_carry_2_fu_219_p2();
    void thread_carry_3_fu_205_p2();
    void thread_carry_borrow();
    void thread_carry_borrow_ap_vld();
    void thread_grp_fu_170_p2();
    void thread_lhs_V_fu_247_p1();
    void thread_r_V_6_fu_191_p2();
    void thread_r_V_7_fu_177_p2();
    void thread_r_V_fu_255_p2();
    void thread_res_V_1_fu_226_p2();
    void thread_res_V_2_fu_212_p2();
    void thread_res_V_3_fu_198_p2();
    void thread_res_V_6_fu_184_p2();
    void thread_res_V_fu_240_p2();
    void thread_result();
    void thread_result_ap_vld();
    void thread_rhs_V_fu_251_p1();
    void thread_v_V_phi_fu_119_p18();
    void thread_v_phi_fu_144_p18();
    void thread_val_V_read_fu_84_p2();
};

}

using namespace ap_rtl;

#endif
