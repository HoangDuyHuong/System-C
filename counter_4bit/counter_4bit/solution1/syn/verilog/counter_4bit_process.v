// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module counter_4bit_process (
        ap_clk,
        ap_rst,
        pe,
        ud,
        bd,
        p,
        q,
        q_ap_vld,
        count_i,
        count_o,
        count_o_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   pe;
input   ud;
input   bd;
input  [3:0] p;
output  [3:0] q;
output   q_ap_vld;
input  [3:0] count_i;
output  [3:0] count_o;
output   count_o_ap_vld;

reg q_ap_vld;
reg[3:0] count_o;
reg count_o_ap_vld;
wire   [0:0] tmp_read_fu_66_p2;
wire   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
wire    ap_sig_bdd_24;
wire   [3:0] grp_fu_115_p2;
wire   [0:0] tmp_1_read_fu_86_p2;
wire   [0:0] tmp_2_read_fu_92_p2;
wire   [0:0] tmp_7_fu_129_p2;
wire   [0:0] tmp_6_fu_135_p2;
wire   [3:0] grp_fu_122_p2;
wire   [0:0] tmp_4_fu_141_p2;
reg   [0:0] ap_NS_fsm;




always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (p or tmp_read_fu_66_p2 or ap_sig_cseq_ST_st1_fsm_0 or grp_fu_115_p2 or tmp_1_read_fu_86_p2 or tmp_2_read_fu_92_p2 or tmp_7_fu_129_p2 or tmp_6_fu_135_p2 or grp_fu_122_p2 or tmp_4_fu_141_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_4_fu_141_p2))) begin
        count_o = ap_const_lv4_F;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_4_fu_141_p2))) begin
        count_o = ap_const_lv4_9;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_4_fu_141_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_4_fu_141_p2)))) begin
        count_o = grp_fu_122_p2;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_7_fu_129_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_6_fu_135_p2)))) begin
        count_o = ap_const_lv4_0;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & (ap_const_lv1_0 == tmp_7_fu_129_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & (ap_const_lv1_0 == tmp_6_fu_135_p2)))) begin
        count_o = grp_fu_115_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_read_fu_66_p2 == ap_const_lv1_0))) begin
        count_o = p;
    end else begin
        count_o = 'bx;
    end
end

always @ (tmp_read_fu_66_p2 or ap_sig_cseq_ST_st1_fsm_0 or tmp_1_read_fu_86_p2 or tmp_2_read_fu_92_p2 or tmp_7_fu_129_p2 or tmp_6_fu_135_p2 or tmp_4_fu_141_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_read_fu_66_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & (ap_const_lv1_0 == tmp_7_fu_129_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_7_fu_129_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & (ap_const_lv1_0 == tmp_6_fu_135_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_6_fu_135_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_4_fu_141_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_4_fu_141_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & (ap_const_lv1_0 == tmp_4_fu_141_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_read_fu_66_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_2_read_fu_92_p2) & ~(ap_const_lv1_0 == tmp_1_read_fu_86_p2) & ~(ap_const_lv1_0 == tmp_4_fu_141_p2)))) begin
        count_o_ap_vld = ap_const_logic_1;
    end else begin
        count_o_ap_vld = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        q_ap_vld = ap_const_logic_1;
    end else begin
        q_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_CS_fsm = ap_ST_st1_fsm_0;


assign ap_sig_bdd_24 = (ap_ST_st1_fsm_0[ap_const_lv32_0] == ap_const_lv1_1);

assign grp_fu_115_p2 = (count_i + ap_const_lv4_1);

assign grp_fu_122_p2 = ($signed(count_i) + $signed(ap_const_lv4_F));

assign q = count_i;

assign tmp_1_read_fu_86_p2 = ud;

assign tmp_2_read_fu_92_p2 = bd;

assign tmp_4_fu_141_p2 = (count_i == ap_const_lv4_0? 1'b1: 1'b0);

assign tmp_6_fu_135_p2 = (count_i == ap_const_lv4_F? 1'b1: 1'b0);

assign tmp_7_fu_129_p2 = (count_i == ap_const_lv4_9? 1'b1: 1'b0);

assign tmp_read_fu_66_p2 = pe;


endmodule //counter_4bit_process

