// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "counter_4bit_process.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic counter_4bit_process::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic counter_4bit_process::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> counter_4bit_process::ap_ST_st1_fsm_0 = "1";
const sc_lv<32> counter_4bit_process::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> counter_4bit_process::ap_const_lv1_1 = "1";
const sc_lv<1> counter_4bit_process::ap_const_lv1_0 = "0";
const sc_lv<4> counter_4bit_process::ap_const_lv4_0 = "0000";
const sc_lv<4> counter_4bit_process::ap_const_lv4_9 = "1001";
const sc_lv<4> counter_4bit_process::ap_const_lv4_F = "1111";
const sc_lv<4> counter_4bit_process::ap_const_lv4_1 = "1";

counter_4bit_process::counter_4bit_process(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_CS_fsm);

    SC_METHOD(thread_ap_sig_bdd_24);

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_24 );

    SC_METHOD(thread_count_o);
    sensitive << ( p );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_fu_115_p2 );
    sensitive << ( tmp_1_read_fu_86_p2 );
    sensitive << ( tmp_2_read_fu_92_p2 );
    sensitive << ( tmp_7_fu_129_p2 );
    sensitive << ( tmp_6_fu_135_p2 );
    sensitive << ( grp_fu_122_p2 );
    sensitive << ( tmp_4_fu_141_p2 );

    SC_METHOD(thread_count_o_ap_vld);
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_1_read_fu_86_p2 );
    sensitive << ( tmp_2_read_fu_92_p2 );
    sensitive << ( tmp_7_fu_129_p2 );
    sensitive << ( tmp_6_fu_135_p2 );
    sensitive << ( tmp_4_fu_141_p2 );

    SC_METHOD(thread_grp_fu_115_p2);
    sensitive << ( count_i );

    SC_METHOD(thread_grp_fu_122_p2);
    sensitive << ( count_i );

    SC_METHOD(thread_q);
    sensitive << ( count_i );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_q_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_tmp_1_read_fu_86_p2);
    sensitive << ( ud );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_tmp_2_read_fu_92_p2);
    sensitive << ( bd );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_tmp_4_fu_141_p2);
    sensitive << ( count_i );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_1_read_fu_86_p2 );

    SC_METHOD(thread_tmp_6_fu_135_p2);
    sensitive << ( count_i );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_1_read_fu_86_p2 );
    sensitive << ( tmp_2_read_fu_92_p2 );

    SC_METHOD(thread_tmp_7_fu_129_p2);
    sensitive << ( count_i );
    sensitive << ( tmp_read_fu_66_p2 );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_1_read_fu_86_p2 );
    sensitive << ( tmp_2_read_fu_92_p2 );

    SC_METHOD(thread_tmp_read_fu_66_p2);
    sensitive << ( pe );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "counter_4bit_process_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, pe, "(port)pe");
    sc_trace(mVcdFile, ud, "(port)ud");
    sc_trace(mVcdFile, bd, "(port)bd");
    sc_trace(mVcdFile, p, "(port)p");
    sc_trace(mVcdFile, q, "(port)q");
    sc_trace(mVcdFile, q_ap_vld, "(port)q_ap_vld");
    sc_trace(mVcdFile, count_i, "(port)count_i");
    sc_trace(mVcdFile, count_o, "(port)count_o");
    sc_trace(mVcdFile, count_o_ap_vld, "(port)count_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_read_fu_66_p2, "tmp_read_fu_66_p2");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_24, "ap_sig_bdd_24");
    sc_trace(mVcdFile, grp_fu_115_p2, "grp_fu_115_p2");
    sc_trace(mVcdFile, tmp_1_read_fu_86_p2, "tmp_1_read_fu_86_p2");
    sc_trace(mVcdFile, tmp_2_read_fu_92_p2, "tmp_2_read_fu_92_p2");
    sc_trace(mVcdFile, tmp_7_fu_129_p2, "tmp_7_fu_129_p2");
    sc_trace(mVcdFile, tmp_6_fu_135_p2, "tmp_6_fu_135_p2");
    sc_trace(mVcdFile, grp_fu_122_p2, "grp_fu_122_p2");
    sc_trace(mVcdFile, tmp_4_fu_141_p2, "tmp_4_fu_141_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

counter_4bit_process::~counter_4bit_process() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void counter_4bit_process::thread_ap_CS_fsm() {
    ap_CS_fsm = ap_ST_st1_fsm_0;
}

void counter_4bit_process::thread_ap_sig_bdd_24() {
    ap_sig_bdd_24 = esl_seteq<1,1,1>(ap_ST_st1_fsm_0.range(0, 0), ap_const_lv1_1);
}

void counter_4bit_process::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_24.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void counter_4bit_process::thread_count_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read()))) {
        count_o = ap_const_lv4_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read()))) {
        count_o = ap_const_lv4_9;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())))) {
        count_o = grp_fu_122_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_129_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_135_p2.read())))) {
        count_o = ap_const_lv4_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_129_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_135_p2.read())))) {
        count_o = grp_fu_115_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0))) {
        count_o = p.read();
    } else {
        count_o = "XXXX";
    }
}

void counter_4bit_process::thread_count_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_129_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_129_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_135_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_135_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(tmp_read_fu_66_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_92_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_read_fu_86_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_141_p2.read())))) {
        count_o_ap_vld = ap_const_logic_1;
    } else {
        count_o_ap_vld = ap_const_logic_0;
    }
}

void counter_4bit_process::thread_grp_fu_115_p2() {
    grp_fu_115_p2 = (!count_i.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(count_i.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void counter_4bit_process::thread_grp_fu_122_p2() {
    grp_fu_122_p2 = (!count_i.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(count_i.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void counter_4bit_process::thread_q() {
    q = count_i.read();
}

void counter_4bit_process::thread_q_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        q_ap_vld = ap_const_logic_1;
    } else {
        q_ap_vld = ap_const_logic_0;
    }
}

void counter_4bit_process::thread_tmp_1_read_fu_86_p2() {
    tmp_1_read_fu_86_p2 =  (sc_lv<1>) (ud.read());
}

void counter_4bit_process::thread_tmp_2_read_fu_92_p2() {
    tmp_2_read_fu_92_p2 =  (sc_lv<1>) (bd.read());
}

void counter_4bit_process::thread_tmp_4_fu_141_p2() {
    tmp_4_fu_141_p2 = (!count_i.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(count_i.read() == ap_const_lv4_0);
}

void counter_4bit_process::thread_tmp_6_fu_135_p2() {
    tmp_6_fu_135_p2 = (!count_i.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(count_i.read() == ap_const_lv4_F);
}

void counter_4bit_process::thread_tmp_7_fu_129_p2() {
    tmp_7_fu_129_p2 = (!count_i.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(count_i.read() == ap_const_lv4_9);
}

void counter_4bit_process::thread_tmp_read_fu_66_p2() {
    tmp_read_fu_66_p2 =  (sc_lv<1>) (pe.read());
}

void counter_4bit_process::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

