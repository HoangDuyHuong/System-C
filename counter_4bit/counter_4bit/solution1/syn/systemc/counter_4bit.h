// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _counter_4bit_HH_
#define _counter_4bit_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "counter_4bit_process.h"

namespace ap_rtl {

struct counter_4bit : public sc_module {
    // Port declarations 7
    sc_in_clk clk;
    sc_in< sc_logic > pe;
    sc_in< sc_logic > ud;
    sc_in< sc_logic > bd;
    sc_in< sc_lv<4> > p;
    sc_out< sc_lv<4> > q;
    sc_in< sc_logic > ap_rst;


    // Module declarations
    counter_4bit(sc_module_name name);
    SC_HAS_PROCESS(counter_4bit);

    ~counter_4bit();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    counter_4bit_process* stg_14_counter_4bit_process_fu_68;
    sc_signal< sc_lv<4> > count;
    sc_signal< sc_logic > stg_14_counter_4bit_process_fu_68_pe;
    sc_signal< sc_logic > stg_14_counter_4bit_process_fu_68_ud;
    sc_signal< sc_logic > stg_14_counter_4bit_process_fu_68_bd;
    sc_signal< sc_lv<4> > stg_14_counter_4bit_process_fu_68_p;
    sc_signal< sc_lv<4> > stg_14_counter_4bit_process_fu_68_q;
    sc_signal< sc_logic > stg_14_counter_4bit_process_fu_68_q_ap_vld;
    sc_signal< sc_lv<4> > stg_14_counter_4bit_process_fu_68_count_i;
    sc_signal< sc_lv<4> > stg_14_counter_4bit_process_fu_68_count_o;
    sc_signal< sc_logic > stg_14_counter_4bit_process_fu_68_count_o_ap_vld;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_36;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_47;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    // Thread declarations
    void thread_count();
    void thread_q();
    void thread_ap_CS_fsm();
    void thread_ap_sig_bdd_36();
    void thread_ap_sig_bdd_47();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_stg_14_counter_4bit_process_fu_68_bd();
    void thread_stg_14_counter_4bit_process_fu_68_count_i();
    void thread_stg_14_counter_4bit_process_fu_68_p();
    void thread_stg_14_counter_4bit_process_fu_68_pe();
    void thread_stg_14_counter_4bit_process_fu_68_ud();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
