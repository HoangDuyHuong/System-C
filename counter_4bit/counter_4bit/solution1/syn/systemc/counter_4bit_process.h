// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _counter_4bit_process_HH_
#define _counter_4bit_process_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct counter_4bit_process : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > pe;
    sc_in< sc_logic > ud;
    sc_in< sc_logic > bd;
    sc_in< sc_lv<4> > p;
    sc_out< sc_lv<4> > q;
    sc_out< sc_logic > q_ap_vld;
    sc_in< sc_lv<4> > count_i;
    sc_out< sc_lv<4> > count_o;
    sc_out< sc_logic > count_o_ap_vld;


    // Module declarations
    counter_4bit_process(sc_module_name name);
    SC_HAS_PROCESS(counter_4bit_process);

    ~counter_4bit_process();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > tmp_read_fu_66_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_24;
    sc_signal< sc_lv<4> > grp_fu_115_p2;
    sc_signal< sc_lv<1> > tmp_1_read_fu_86_p2;
    sc_signal< sc_lv<1> > tmp_2_read_fu_92_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_129_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_135_p2;
    sc_signal< sc_lv<4> > grp_fu_122_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_141_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_1;
    // Thread declarations
    void thread_ap_CS_fsm();
    void thread_ap_sig_bdd_24();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_count_o();
    void thread_count_o_ap_vld();
    void thread_grp_fu_115_p2();
    void thread_grp_fu_122_p2();
    void thread_q();
    void thread_q_ap_vld();
    void thread_tmp_1_read_fu_86_p2();
    void thread_tmp_2_read_fu_92_p2();
    void thread_tmp_4_fu_141_p2();
    void thread_tmp_6_fu_135_p2();
    void thread_tmp_7_fu_129_p2();
    void thread_tmp_read_fu_66_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
